<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.prod.dao.ProdDAO">
	<resultMap type="ProdVO" id="prodMap" autoMapping="true">
		<id property="prodId" column="PROD_ID"/>
		<association property="buyer" javaType="BuyerVO" autoMapping="true" />
		<collection property="memberList" ofType="MemberVO" autoMapping="true" />
	</resultMap>
	
	<sql id="searchFrag">
		<trim prefix=" WHERE " prefixOverrides="AND">
			<if test="detailCondition neq null">
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailCondition.prodLgu)">
					AND PROD_LGU = #{detailCondition.prodLgu}
				</if>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailCondition.prodBuyer)">
					AND PROD_BUYER = #{detailCondition.prodBuyer}
				</if>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailCondition.prodName)">
					AND PROD_NAME LIKE '%'||#{detailCondition.prodName}||'%'
				</if>
			</if>
		</trim> 
	</sql>
	
	<select id="selectTotalRecord" resultType="int" parameterType="Pagination">
		SELECT COUNT(*)
		FROM PROD
		<include refid="searchFrag" />
	</select>

	<select id="selectProdList" resultType="ProdVO" parameterType="Pagination">
		WITH DESCPROD AS(
			SELECT PROD_ID, PROD_NAME
			    , PROD_LGU, LPROD_NM
			    , PROD_BUYER, BUYER_NAME "buyer.buyerName"
			    , PROD_INSDATE, PROD_PRICE
			    , PROD_MILEAGE
			    , ( SELECT COUNT(DISTINCT CART_MEMBER) FROM CART WHERE CART_PROD = PROD_ID ) MEM_COUNT
			FROM PROD INNER JOIN LPROD ON (PROD_LGU = LPROD_GU)
			        INNER JOIN BUYER ON (PROD_BUYER = BUYER_ID)
			<include refid="searchFrag" />     
			ORDER BY PROD_LGU ASC, PROD_ID DESC
		), RNUMPROD AS (
			SELECT DESCPROD.*, ROWNUM RNUM
			FROM DESCPROD
		)
		SELECT *
		FROM RNUMPROD
		<![CDATA[ 
		WHERE RNUM >= #{startRow} AND RNUM <= #{endRow}
		]]>     
	</select>
	
	<select id="selectProd" resultMap="prodMap" parameterType="string">
		WITH CARTVIEW AS(
		    SELECT CART_PROD, MEM_ID, MEM_NAME
		            , MEM_ADD1, MEM_MAIL, MEM_MILEAGE            
		    FROM (
		        SELECT DISTINCT CART_PROD, CART_MEMBER
		        FROM CART
		    ) INNER JOIN MEMBER ON (CART_MEMBER = MEM_ID)
		)
		SELECT
			    PROD_ID,    PROD_NAME
			    , PROD_LGU, LPROD_NM
			    , PROD_BUYER
			    , PROD_COST,    PROD_PRICE,    PROD_SALE
			    , PROD_OUTLINE,    PROD_DETAIL,    PROD_IMG
			    , PROD_TOTALSTOCK,    PROD_INSDATE,    PROD_PROPERSTOCK
			    , PROD_SIZE,    PROD_COLOR,    PROD_DELIVERY
			    , PROD_UNIT,    PROD_QTYIN,    PROD_QTYSALE
			    , PROD_MILEAGE
			    
			    , BUYER_NAME, BUYER_ID, BUYER_ADD1
			    , BUYER_CHARGER, BUYER_COMTEL
			    , BUYER_MAIL
	            
	            , MEM_ID, MEM_NAME
	            , MEM_ADD1, MEM_MAIL, MEM_MILEAGE            
			    
			FROM    PROD INNER JOIN LPROD ON (PROD_LGU = LPROD_GU)
			            INNER JOIN BUYER ON (PROD_BUYER = BUYER_ID)
	                    LEFT OUTER JOIN CARTVIEW ON (PROD_ID = CART_PROD)
			WHERE PROD_ID = #{prodId}
	</select>
	<insert id="insertProd" parameterType="ProdVO">
		<selectKey resultType="string" keyProperty="prodId" order="BEFORE">
			SELECT #{prodLgu}||LPAD(NVL(TO_NUMBER(SUBSTR(MAX(PROD_ID), LENGTH(#{prodLgu})+1)), 0) + 1, 6, '0')
			FROM PROD
			WHERE PROD_LGU = #{prodLgu}
		</selectKey>
		INSERT INTO PROD
		(
			PROD_ID
			, PROD_NAME
			, PROD_LGU
			, PROD_BUYER
			, PROD_COST
			, PROD_PRICE
			, PROD_SALE
			, PROD_OUTLINE
			, PROD_DETAIL
			
			, PROD_IMG
			
			, PROD_TOTALSTOCK
			, PROD_INSDATE
			, PROD_PROPERSTOCK
			, PROD_SIZE
			, PROD_COLOR
			, PROD_DELIVERY
			, PROD_UNIT
			, PROD_QTYIN
			, PROD_QTYSALE
			, PROD_MILEAGE
		)VALUES(
			#{prodId,jdbcType=VARCHAR}
			, #{prodName,jdbcType=VARCHAR}
			, #{prodLgu,jdbcType=CHAR}
			, #{prodBuyer,jdbcType=CHAR}
			, #{prodCost,jdbcType=NUMERIC}
			, #{prodPrice,jdbcType=NUMERIC}
			, #{prodSale,jdbcType=NUMERIC}
			, #{prodOutline,jdbcType=VARCHAR}
			, #{prodDetail,jdbcType=CLOB}
			
			, #{prodImg,jdbcType=VARCHAR}
			
			, #{prodTotalstock,jdbcType=NUMERIC}
			, #{prodInsdate,jdbcType=DATE}
			, #{prodProperstock,jdbcType=NUMERIC}
			, #{prodSize,jdbcType=VARCHAR}
			, #{prodColor,jdbcType=VARCHAR}
			, #{prodDelivery,jdbcType=VARCHAR}
			, #{prodUnit,jdbcType=VARCHAR}
			, #{prodQtyin,jdbcType=NUMERIC}
			, #{prodQtysale,jdbcType=NUMERIC}
			, #{prodMileage,jdbcType=NUMERIC}
		)
	</insert>
	<update id="updateProd" parameterType="ProdVO">
		UPDATE PROD
		SET
			PROD_NAME = #{prodName,jdbcType=VARCHAR}
			, PROD_LGU = #{prodLgu,jdbcType=CHAR}
			, PROD_BUYER = #{prodBuyer,jdbcType=CHAR}
			, PROD_COST = #{prodCost,jdbcType=NUMERIC}
			, PROD_PRICE = #{prodPrice,jdbcType=NUMERIC}
			, PROD_SALE = #{prodSale,jdbcType=NUMERIC}
			, PROD_OUTLINE = #{prodOutline,jdbcType=VARCHAR}
			, PROD_DETAIL = #{prodDetail,jdbcType=CLOB}
			, PROD_IMG = #{prodImg,jdbcType=VARCHAR}
			, PROD_TOTALSTOCK = #{prodTotalstock,jdbcType=NUMERIC}
			, PROD_INSDATE = #{prodInsdate,jdbcType=DATE}
			, PROD_PROPERSTOCK = #{prodProperstock,jdbcType=NUMERIC}
			, PROD_SIZE = #{prodSize,jdbcType=VARCHAR}
			, PROD_COLOR = #{prodColor,jdbcType=VARCHAR}
			, PROD_DELIVERY = #{prodDelivery,jdbcType=VARCHAR}
			, PROD_UNIT = #{prodUnit,jdbcType=VARCHAR}
			, PROD_QTYIN = #{prodQtyin,jdbcType=NUMERIC}
			, PROD_QTYSALE = #{prodQtysale,jdbcType=NUMERIC}
			, PROD_MILEAGE = #{prodMileage,jdbcType=NUMERIC}
		WHERE PROD_ID = #{prodId,jdbcType=VARCHAR}
	</update>
</mapper>